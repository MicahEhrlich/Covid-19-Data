{"version":3,"sources":["components/pages/Home.js","constants.js","components/layout/Navbar.js","App.js","index.js"],"names":["tabDataStyle","color","backgroundColor","marginLeft","paddingRight","marginRight","minWidth","Home","useState","data","setData","unsortedData","setUnsortedData","total","setTotal","lastUpdate","setLastUpdate","text","selected","setSelected","getCoronaData","a","axios","get","resTotal","res","Date","lastupdate","toString","labels","confirmed","sort","b","i","push","countryregion","reduce","colors","Math","floor","random","datasets","hoverBackgroundColor","useEffect","Container","className","Button","onClick","Paper","elevation","style","fontSize","yellow","deaths","red","recovered","green","width","Chart","type","paddingTop","textAlign","useStyles","makeStyles","theme","root","flexGrow","menuButton","spacing","title","Navbar","classes","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71097a7e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Container } from '@material-ui/core';\r\nimport { Chart } from '@bit/primefaces.primereact.chart';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport SentimentDissatisfiedRoundedIcon from '@material-ui/icons/SentimentDissatisfiedRounded';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { green, red, yellow } from '@material-ui/core/colors';\r\n\r\nimport { COUNTRIES_DATA_API, TOTAL_CASES_API } from '../../constants';\r\n\r\nfunction tabDataStyle(color) {\r\n  return {\r\n    color: 'white',\r\n    backgroundColor: color,\r\n    marginLeft: '6px',\r\n    paddingRight: '4px',\r\n    marginRight: '10px',\r\n    minWidth: '230px'\r\n  };\r\n}\r\n\r\nfunction selectedStyle(color) {\r\n  return {\r\n    color: 'white',\r\n    backgroundColor: color\r\n  };\r\n}\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState({});\r\n  const [unsortedData, setUnsortedData] = useState([]);\r\n  const [total, setTotal] = useState([]);\r\n  const [lastUpdate, setLastUpdate] = useState('');\r\n  const [selected, setSelected] = useState({\r\n    text: 'Confirmed',\r\n    color: 'goldenrod'\r\n  });\r\n\r\n  const sortDataByDeaths = () => {\r\n    unsortedData.sort((a, b) => (a.deaths < b.deaths ? 1 : -1));\r\n\r\n    let labels = [];\r\n    let deaths = [];\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      labels.push(unsortedData[i].countryregion);\r\n      deaths.push(unsortedData[i].deaths);\r\n    }\r\n\r\n    let colors = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\r\n    }\r\n\r\n    labels.push('Others');\r\n\r\n    deaths.push(total.deaths - deaths.reduce((a, b) => a + b, 0));\r\n\r\n    let tempData = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          data: deaths,\r\n          backgroundColor: colors,\r\n          hoverBackgroundColor: colors\r\n        }\r\n      ]\r\n    };\r\n    setData(tempData);\r\n    setSelected({\r\n      text: 'Deaths',\r\n      color: 'darkred'\r\n    });\r\n  };\r\n\r\n  const sortDataByRecovered = () => {\r\n    unsortedData.sort((a, b) => (a.recovered < b.recovered ? 1 : -1));\r\n\r\n    let labels = [];\r\n    let recovered = [];\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      labels.push(unsortedData[i].countryregion);\r\n      recovered.push(unsortedData[i].recovered);\r\n    }\r\n\r\n    let colors = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\r\n    }\r\n\r\n    labels.push('Others');\r\n\r\n    recovered.push(total.recovered - recovered.reduce((a, b) => a + b, 0));\r\n\r\n    let tempData = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          data: recovered,\r\n          backgroundColor: colors,\r\n          hoverBackgroundColor: colors\r\n        }\r\n      ]\r\n    };\r\n    setData(tempData);\r\n    setSelected({\r\n      text: 'Recovered',\r\n      color: 'green'\r\n    });\r\n  };\r\n\r\n  const sortDataByConfirmed = () => {\r\n    let labels = [];\r\n    let confirmed = [];\r\n\r\n    // sort our data by confiremd\r\n    unsortedData.sort((a, b) => (a.confirmed < b.confirmed ? 1 : -1));\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      labels.push(unsortedData[i].countryregion);\r\n      confirmed.push(unsortedData[i].confirmed);\r\n    }\r\n\r\n    labels.push('Others');\r\n\r\n    confirmed.push(total.confirmed - confirmed.reduce((a, b) => a + b, 0));\r\n\r\n    let colors = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\r\n    }\r\n\r\n    let tempData = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          data: confirmed,\r\n          backgroundColor: colors,\r\n          hoverBackgroundColor: colors\r\n        }\r\n      ]\r\n    };\r\n    setData(tempData);\r\n    setSelected({\r\n      text: 'Confirmed',\r\n      color: 'goldenrod'\r\n    });\r\n  };\r\n\r\n  const getCoronaData = async () => {\r\n    const resTotal = await axios.get(TOTAL_CASES_API);\r\n    setTotal(resTotal.data);\r\n\r\n    const res = await axios.get(COUNTRIES_DATA_API);\r\n    setUnsortedData(res.data);\r\n\r\n    let lastUpdate = new Date(res.data[0].lastupdate);\r\n\r\n    setLastUpdate(lastUpdate.toString());\r\n\r\n    let labels = [];\r\n    let confirmed = [];\r\n\r\n    // sort our data by confiremd\r\n    res.data.sort((a, b) => (a.confirmed < b.confirmed ? 1 : -1));\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      labels.push(res.data[i].countryregion);\r\n      confirmed.push(res.data[i].confirmed);\r\n    }\r\n\r\n    labels.push('Others');\r\n\r\n    confirmed.push(\r\n      resTotal.data.confirmed - confirmed.reduce((a, b) => a + b, 0)\r\n    );\r\n\r\n    let colors = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\r\n    }\r\n\r\n    let tempData = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          data: confirmed,\r\n          backgroundColor: colors,\r\n          hoverBackgroundColor: colors\r\n        }\r\n      ]\r\n    };\r\n    setData(tempData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCoronaData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <div className='world-total'>\r\n          <Button onClick={sortDataByConfirmed}>\r\n            <Paper elevation={3} style={tabDataStyle('goldenrod')}>\r\n              <h3>\r\n                <LocalHospitalIcon\r\n                  fontSize='large'\r\n                  style={{ paddingRight: '8px', color: yellow[500] }}\r\n                />\r\n                Confirmed {total.confirmed}\r\n              </h3>\r\n            </Paper>\r\n          </Button>\r\n          <Button onClick={sortDataByDeaths}>\r\n            <Paper style={tabDataStyle('darkred')} elevation={3}>\r\n              <div>\r\n                <h3>\r\n                  <SentimentDissatisfiedRoundedIcon\r\n                    fontSize='large'\r\n                    style={{\r\n                      marginRight: '54px',\r\n                      color: red[500]\r\n                    }}\r\n                  />\r\n                  Deaths {total.deaths}\r\n                </h3>\r\n              </div>\r\n            </Paper>\r\n          </Button>\r\n          <Button onClick={sortDataByRecovered}>\r\n            <Paper style={tabDataStyle('green')} elevation={3}>\r\n              <div>\r\n                <h3>\r\n                  <FavoriteIcon\r\n                    fontSize='large'\r\n                    style={{\r\n                      paddingRight: '8px',\r\n                      color: green[500]\r\n                    }}\r\n                  />\r\n                  Recovered {total.recovered}\r\n                </h3>\r\n              </div>\r\n            </Paper>\r\n          </Button>\r\n        </div>\r\n        <Container style={{ width: '350px' }}>\r\n          <Paper style={selectedStyle(selected.color)} elevation={3}>\r\n            <h4>{selected.text}</h4>\r\n          </Paper>\r\n        </Container>\r\n        <div style={{ color: 'white' }}>\r\n          <Chart type='pie' data={data} />\r\n        </div>\r\n        <h4 style={{ paddingTop: '40px', textAlign: 'left', color: 'white' }}>\r\n          Last Update: {lastUpdate}\r\n        </h4>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const COUNTRIES_DATA_API =\r\n  'https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/latest?onlyCountries=true';\r\nexport const TOTAL_CASES_API =\r\n  'https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/brief';\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge='start'\r\n            className={classes.menuButton}\r\n            color='inherit'\r\n            aria-label='menu'>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant='h6' className={classes.title}>\r\n            Corona Virus - COVID 19 Data\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport './App.css';\nimport Home from '../src/components/pages/Home';\nimport Navbar from '../src/components/layout/Navbar';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <Navbar />\n      </header>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}