{"version":3,"sources":["components/pages/Home.js","constants.js","components/layout/Navbar.js","App.js","index.js"],"names":["Home","useState","data","setData","unsortedData","setUnsortedData","total","setTotal","sortDataByDeaths","sort","a","b","deaths","labels","i","push","countryregion","colors","Math","floor","random","toString","reduce","datasets","backgroundColor","hoverBackgroundColor","getCoronaData","axios","get","resTotal","res","confirmed","console","log","useEffect","Container","className","Button","onClick","Paper","style","minWidth","marginLeft","paddingRight","marginRight","elevation","fontSize","color","yellow","red","recovered","green","Chart","type","useStyles","makeStyles","theme","root","flexGrow","menuButton","spacing","title","Navbar","classes","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5f3202e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Container } from '@material-ui/core';\r\nimport { Chart } from '@bit/primefaces.primereact.chart';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport SentimentDissatisfiedRoundedIcon from '@material-ui/icons/SentimentDissatisfiedRounded';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { green, red, yellow } from '@material-ui/core/colors';\r\n\r\nimport { COUNTRIES_DATA_API, TOTAL_CASES_API } from '../../constants';\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState({});\r\n  const [unsortedData, setUnsortedData] = useState([]);\r\n  const [total, setTotal] = useState([]);\r\n\r\n  const sortDataByDeaths = () => {\r\n    unsortedData.sort((a, b) => (a.deaths < b.deaths ? 1 : -1));\r\n\r\n    let labels = [];\r\n    let deaths = [];\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      labels.push(unsortedData[i].countryregion);\r\n      deaths.push(unsortedData[i].deaths);\r\n    }\r\n\r\n    let colors = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\r\n    }\r\n\r\n    labels.push('Others');\r\n\r\n    deaths.push(total.deaths - deaths.reduce((a, b) => a + b, 0));\r\n\r\n    let tempData = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          data: deaths,\r\n          backgroundColor: colors,\r\n          hoverBackgroundColor: colors\r\n        }\r\n      ]\r\n    };\r\n    setData(tempData);\r\n  };\r\n\r\n  const sortDataByRecovered = () => {\r\n    unsortedData.sort((a, b) => (a.recovered < b.recovered ? 1 : -1));\r\n\r\n    let labels = [];\r\n    let recovered = [];\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      labels.push(unsortedData[i].countryregion);\r\n      recovered.push(unsortedData[i].recovered);\r\n    }\r\n\r\n    let colors = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\r\n    }\r\n\r\n    labels.push('Others');\r\n\r\n    recovered.push(total.recovered - recovered.reduce((a, b) => a + b, 0));\r\n\r\n    let tempData = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          data: recovered,\r\n          backgroundColor: colors,\r\n          hoverBackgroundColor: colors\r\n        }\r\n      ]\r\n    };\r\n    setData(tempData);\r\n  };\r\n\r\n  const sortDataByConfirmed = () => {\r\n    let labels = [];\r\n    let confirmed = [];\r\n\r\n    // sort our data by confiremd\r\n    unsortedData.sort((a, b) => (a.confirmed < b.confirmed ? 1 : -1));\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      labels.push(unsortedData[i].countryregion);\r\n      confirmed.push(unsortedData[i].confirmed);\r\n    }\r\n\r\n    labels.push('Others');\r\n\r\n    confirmed.push(total.confirmed - confirmed.reduce((a, b) => a + b, 0));\r\n\r\n    let colors = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\r\n    }\r\n\r\n    let tempData = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          data: confirmed,\r\n          backgroundColor: colors,\r\n          hoverBackgroundColor: colors\r\n        }\r\n      ]\r\n    };\r\n    setData(tempData);\r\n  };\r\n\r\n  const getCoronaData = async () => {\r\n    const resTotal = await axios.get(TOTAL_CASES_API);\r\n    setTotal(resTotal.data);\r\n\r\n    const res = await axios.get(COUNTRIES_DATA_API);\r\n    setUnsortedData(res.data);\r\n\r\n    let labels = [];\r\n    let confirmed = [];\r\n\r\n    // sort our data by confiremd\r\n    res.data.sort((a, b) => (a.confirmed < b.confirmed ? 1 : -1));\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      labels.push(res.data[i].countryregion);\r\n      confirmed.push(res.data[i].confirmed);\r\n    }\r\n\r\n    labels.push('Others');\r\n\r\n    console.log(resTotal.data.confirmed - confirmed.reduce((a, b) => a + b, 0));\r\n\r\n    confirmed.push(\r\n      resTotal.data.confirmed - confirmed.reduce((a, b) => a + b, 0)\r\n    );\r\n\r\n    let colors = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\r\n    }\r\n\r\n    let tempData = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          data: confirmed,\r\n          backgroundColor: colors,\r\n          hoverBackgroundColor: colors\r\n        }\r\n      ]\r\n    };\r\n    setData(tempData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCoronaData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <div className='world-total'>\r\n          <Button onClick={sortDataByConfirmed}>\r\n            <Paper\r\n              style={{\r\n                backgroundColor: 'goldenrod',\r\n                minWidth: 100,\r\n                marginLeft: '6px',\r\n                paddingRight: '4px',\r\n                marginRight: '10px'\r\n              }}\r\n              elevation={3}>\r\n              <div>\r\n                <h3>\r\n                  <LocalHospitalIcon\r\n                    fontSize='large'\r\n                    style={{ color: yellow[500] }}\r\n                  />\r\n                  Confirmed {total.confirmed}\r\n                </h3>\r\n              </div>\r\n            </Paper>\r\n          </Button>\r\n          <Button onClick={sortDataByDeaths}>\r\n            <Paper\r\n              onClick={sortDataByDeaths}\r\n              style={{\r\n                backgroundColor: 'darkred',\r\n                minWidth: 100,\r\n                paddingRight: '4px',\r\n                marginRight: '10px'\r\n              }}\r\n              elevation={3}>\r\n              <div>\r\n                <h3>\r\n                  <SentimentDissatisfiedRoundedIcon\r\n                    fontSize='large'\r\n                    style={{ color: red[500] }}\r\n                  />\r\n                  Deaths {total.deaths}\r\n                </h3>\r\n              </div>\r\n            </Paper>\r\n          </Button>\r\n          <Button onClick={sortDataByRecovered}>\r\n            <Paper\r\n              style={{\r\n                backgroundColor: 'green',\r\n                minWidth: 100,\r\n                paddingRight: '4px',\r\n                marginRight: '10px'\r\n              }}\r\n              elevation={3}>\r\n              <div>\r\n                <h3>\r\n                  <FavoriteIcon\r\n                    fontSize='large'\r\n                    style={{ color: green[500] }}\r\n                  />\r\n                  Recovered {total.recovered}\r\n                </h3>\r\n              </div>\r\n            </Paper>\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Chart type='pie' data={data} />\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const COUNTRIES_DATA_API =\r\n  'https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/latest?onlyCountries=true';\r\nexport const TOTAL_CASES_API =\r\n  'https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai/jhu-edu/brief';\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge='start'\r\n            className={classes.menuButton}\r\n            color='inherit'\r\n            aria-label='menu'>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant='h6' className={classes.title}>\r\n            Corona Virus - COVID 19 Data\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport './App.css';\nimport Home from '../src/components/pages/Home';\nimport Navbar from '../src/components/layout/Navbar';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <Navbar />\n      </header>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}